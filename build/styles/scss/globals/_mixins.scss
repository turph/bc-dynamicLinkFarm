@import 'base';

@mixin breakpoint($point) {
  	@if $point == mobile {
    	@media only screen and (min-width: 0px) and (max-width: 650px) { @content; }
  	}
	@else if $point == plus {
		@media only screen and (min-width: 414px) and (max-width: 650px) { @content; }
	}
	@else if $point == tablet {
		@media only screen and (min-width: 651px) { @content; }
	}
	@else if $point == iphone-4 {
		@media only screen and (min-height: 0px) and (max-height: 480px) { @content; }
	}
	@else if $point == iphone-5 {
		@media only screen and (min-height: 481px) and (max-height: 574px) { @content; }
	}
	@else if $point == iphone-6 {
		@media only screen and (min-width: 375px) and (max-width: 413px) { @content; }
	}
	@else if $point == iphone-6-plus {
		@media only screen and (min-width: 414px) and (max-width: 622px) { @content; }
	}
	@else if $point == portrait {
		@media only screen and (min-width: 623px) and (max-width: 770px) { @content; }
	}
	@else if $point == landscape {
		@media only screen and (min-width: 771px) { @content; }
	}
}

/* Cross Browser Inline-Block */
@mixin inline-block {
  	display: inline-block; /* For normal, healthy browsers */
 
  	* html & { /* for IE6 */
    	display: inline;
  	}
 
  	*+html & { /* for IE7 */
    	display: inline;
  	}
}

@mixin ellipsis {
	overflow: hidden;
	text-overflow: ellipsis;
  	white-space: nowrap;
}

@mixin prefix($property, $value) {
  @each $vendor in ('-webkit-', '-moz-', '-ms-', '-o-', '') {
    #{$vendor}#{$property}: #{$value};
  }
}